/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import Listas.*;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;

/**
 *
 * @author Administrador
 */
public class Tabla extends javax.swing.JFrame {
    boolean flgC = true;
    private int n, m;
    private Matriz matrizOriginal;
    
    private Matriz matrizOperaciones;
    private Matriz matrizTraspuesta; 
    private Matriz matrizEspejo;
     
    private double tama√±oCuadrado;
    private Matriz matrizDiagonal;
    private Matriz matrizCuadrado;
    /**
     * Creates new form Tabla
     */
    public Tabla() {
        initComponents();
        
        frOperaciones.setTitle("Operaciones");
        frSuma.setTitle("Sumatorias");
        String a = "-50";
        ;
        System.out.println(" a "+a.replace("-", ""));
        this.setTitle("Tabla completa");
    }
    
    public Tabla(int n, int m) {
        this();
        this.setLocationRelativeTo(null);
        this.n = n;
        this.m = m;
        matrizOriginal = new Matriz(n, m);
        
        panelTabla.setLayout(new GridLayout(n, m));
        PanelX.setLayout(new GridLayout(1, m));
        PanelY.setLayout(new GridLayout(n, 1));
        for (int i = 0; i < n; i++) {
            JTextField row = new JTextField(" "+i);
            row.setEditable(false);
            PanelY.add(row);
            for (int j = 0; j < m; j++) {
                JTextField temp = (JTextField) matrizOriginal.get(i, j);
                panelTabla.add(temp);
                if (i == 0) {
                    JTextField col = new JTextField(" "+j);
                    col.setEditable(false);
                    PanelX.add(col);
                }
            }
        }
        nuevaMatriz();
    }
    
//    public void generarAleatorios() {
//        Panel1.setLayout(new GridLayout(n, m));
////        aleatorios = new ListaSecuencial();
////        for(int i=0;i<(n*m);i++){
////            int M=-100;
////            int N=100;
////            int valorEntero = (int) Math.floor(Math.random()*(N-M+1)+M);
////            JTextField obj = new JTextField();
////            obj.setText(valorEntero+"");
////            aleatorios.add(aleatorios.length(), obj);
////            System.err.println(valorEntero);
////        }        
////        llenarTabla();
//    }
    
//    public void llenarTabla() {
//        matrizOriginal = new ListaSecuencial();
//        for (int i = 0, k = 0; i < m; i++) {
//            ListaSecuencial temp = new ListaSecuencial();
//            for (int j = 0;j < n; j++, k++) {
//                temp.add(j, aleatorios.get(k));
//            }
//            matrizOriginal.add(matrizOriginal.length(), temp);            
//        }
//        PanelX.setLayout(new GridLayout(1, m));
//        PanelY.setLayout(new GridLayout(n, 1));
//        for (int i = 0; i < matrizOriginal.length(); i++) {
//            ListaSecuencial temp = (ListaSecuencial) matrizOriginal.get(i);
//            JTextField col = new JTextField(""+i);
//            col.setEditable(false);
//            PanelX.add(col);
//            for (int j = 0; j < temp.length(); j++) {
//                JTextField obj = (JTextField) temp.get(j);
//                obj.addActionListener(new ActionListener() {
//                    @Override
//                    public void actionPerformed(ActionEvent ae) {
//                        obj.setText(obj.getText());
//                        obj.updateUI();
//                    }
//                });
//                Panel1.add(obj);
//                if (i == 0) {
//                    JTextField row = new JTextField(""+j);
//                    row.setEditable(false);
//                    PanelY.add(row);                    
//                }
//            }
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frOperaciones = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        btnSumaSM = new javax.swing.JButton();
        btnRestaurar = new javax.swing.JButton();
        btnLimpiarLbl = new javax.swing.JButton();
        btnTraspuesta = new javax.swing.JButton();
        btnEspejo = new javax.swing.JButton();
        btnDiagonal = new javax.swing.JButton();
        btnMinimo = new javax.swing.JButton();
        btnCuadrado = new javax.swing.JButton();
        btnMaximo = new javax.swing.JButton();
        btnParImpar = new javax.swing.JButton();
        btnPrimos = new javax.swing.JButton();
        btnPerfecto = new javax.swing.JButton();
        btnMultiplo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        frSuma = new javax.swing.JFrame();
        jLabel9 = new javax.swing.JLabel();
        x1Input = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        y1Input = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        x2Input = new javax.swing.JTextField();
        y2Input = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        xOutput = new javax.swing.JTextField();
        yOutput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnDivisio = new javax.swing.JButton();
        btnMultiplicacion = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnSuma3 = new javax.swing.JButton();
        btnSuma2 = new javax.swing.JButton();
        btnSuma1 = new javax.swing.JButton();
        btnResta = new javax.swing.JButton();
        btnRestaProg = new javax.swing.JButton();
        btnConcatenar = new javax.swing.JButton();
        btnMCM = new javax.swing.JButton();
        btnMCD = new javax.swing.JButton();
        frMultiplo = new javax.swing.JFrame();
        txtMultiplo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Multiplo = new javax.swing.JButton();
        btnMayoresA = new javax.swing.JButton();
        btnMenoresA = new javax.swing.JButton();
        btnDivisores = new javax.swing.JButton();
        bOperar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        PanelY = new javax.swing.JPanel();
        panelTabla = new javax.swing.JPanel();
        PanelX = new javax.swing.JPanel();

        frOperaciones.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSumaSM.setText("Operadores");
        btnSumaSM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumaSMActionPerformed(evt);
            }
        });
        jPanel3.add(btnSumaSM, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 13, 112, 41));

        btnRestaurar.setText("Restaurar Matriz");
        btnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarActionPerformed(evt);
            }
        });
        jPanel3.add(btnRestaurar, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 136, -1, 45));

        btnLimpiarLbl.setText("Quitar Colores");
        btnLimpiarLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarLblActionPerformed(evt);
            }
        });
        jPanel3.add(btnLimpiarLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 136, 140, 45));

        btnTraspuesta.setText("Transpuesta");
        btnTraspuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraspuestaActionPerformed(evt);
            }
        });
        jPanel3.add(btnTraspuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 13, 138, 41));

        btnEspejo.setText("Espejo");
        btnEspejo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEspejoActionPerformed(evt);
            }
        });
        jPanel3.add(btnEspejo, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 13, 101, 41));

        btnDiagonal.setText("Cambiar Diagonales");
        btnDiagonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagonalActionPerformed(evt);
            }
        });
        jPanel3.add(btnDiagonal, new org.netbeans.lib.awtextra.AbsoluteConstraints(416, 12, -1, 43));

        btnMinimo.setText("Minimo");
        btnMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimoActionPerformed(evt);
            }
        });
        jPanel3.add(btnMinimo, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 13, 184, 41));

        btnCuadrado.setText("Elevar al Cuadrado");
        btnCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuadradoActionPerformed(evt);
            }
        });
        jPanel3.add(btnCuadrado, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 68, 137, 50));

        btnMaximo.setText("Maximo");
        btnMaximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaximoActionPerformed(evt);
            }
        });
        jPanel3.add(btnMaximo, new org.netbeans.lib.awtextra.AbsoluteConstraints(755, 12, 105, 43));

        btnParImpar.setText("Pares e Impares");
        btnParImpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParImparActionPerformed(evt);
            }
        });
        jPanel3.add(btnParImpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 122, 45));

        btnPrimos.setText("Primos");
        btnPrimos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimosActionPerformed(evt);
            }
        });
        jPanel3.add(btnPrimos, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, 74, 45));

        btnPerfecto.setText("Perfecto");
        btnPerfecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerfectoActionPerformed(evt);
            }
        });
        jPanel3.add(btnPerfecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 102, 45));

        btnMultiplo.setText("Operadores 2");
        btnMultiplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiploActionPerformed(evt);
            }
        });
        jPanel3.add(btnMultiplo, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 73, 150, 45));

        jButton1.setText("Negativos y Positivos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 68, 151, 50));

        frOperaciones.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 200));

        jLabel9.setText("Desde X‚ÇÅ: ");

        jLabel10.setText("Y‚ÇÅ: ");

        jLabel11.setText("hasta X‚ÇÇ: ");

        jLabel12.setText("Y‚ÇÇ: ");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Coordenadas donde se mostrara el Resultado"));

        jLabel5.setText("X");

        jLabel6.setText("Y");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Coordenadas del Primer Punto: ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Coordenadas del Segundo Punto: ");

        btnDivisio.setText("Divisi√≥n");
        btnDivisio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisioActionPerformed(evt);
            }
        });

        btnMultiplicacion.setText("Multiplicaci√≥n");
        btnMultiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplicacionActionPerformed(evt);
            }
        });

        jLabel13.setText("Calcular suma de todos los numeros del Rango");

        jLabel14.setText("del primer punto al segundo");

        jLabel15.setText("Calcular suma del numero del Primer Punto mas");

        jLabel16.setText("el numero del segundo punto");

        jLabel17.setText("Calcular promedio de todos los numeros del rango");

        jLabel18.setText("del primer punto al segundo (Redondeado)");

        btnSuma3.setText("Promedio");
        btnSuma3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuma3ActionPerformed(evt);
            }
        });

        btnSuma2.setText("Suma");
        btnSuma2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuma2ActionPerformed(evt);
            }
        });

        btnSuma1.setText("Suma Prog");
        btnSuma1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuma1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel17)
                        .addComponent(jLabel18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel15)
                        .addComponent(jLabel16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel13)
                        .addComponent(jLabel14)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSuma1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuma2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuma3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)))
                    .addComponent(btnSuma1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSuma2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSuma3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        btnResta.setText("Resta");
        btnResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaActionPerformed(evt);
            }
        });

        btnRestaProg.setText("Resta Progresiva");
        btnRestaProg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaProgActionPerformed(evt);
            }
        });

        btnConcatenar.setText("Concatenar");
        btnConcatenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcatenarActionPerformed(evt);
            }
        });

        btnMCM.setText("MCM");
        btnMCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMCMActionPerformed(evt);
            }
        });

        btnMCD.setText("MCD");
        btnMCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMCDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frSumaLayout = new javax.swing.GroupLayout(frSuma.getContentPane());
        frSuma.getContentPane().setLayout(frSumaLayout);
        frSumaLayout.setHorizontalGroup(
            frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frSumaLayout.createSequentialGroup()
                .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frSumaLayout.createSequentialGroup()
                        .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frSumaLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x1Input, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(y1Input, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(frSumaLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x2Input, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(y2Input, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(frSumaLayout.createSequentialGroup()
                        .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frSumaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDivisio, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnMultiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnResta, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRestaProg, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(frSumaLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(frSumaLayout.createSequentialGroup()
                                        .addComponent(btnConcatenar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnMCM))
                                    .addComponent(btnMCD))))
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addContainerGap())
        );
        frSumaLayout.setVerticalGroup(
            frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frSumaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(17, 17, 17)
                .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x1Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(y1Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(x2Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y2Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(frSumaLayout.createSequentialGroup()
                        .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnMCM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(btnConcatenar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMCD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(frSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frSumaLayout.createSequentialGroup()
                        .addComponent(btnDivisio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMultiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRestaProg, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frSumaLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Numero: ");

        Multiplo.setText("Multiplo de");
        Multiplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiploActionPerformed(evt);
            }
        });

        btnMayoresA.setText("Mayores a");
        btnMayoresA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMayoresAActionPerformed(evt);
            }
        });

        btnMenoresA.setText("Menores a");
        btnMenoresA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenoresAActionPerformed(evt);
            }
        });

        btnDivisores.setText("Divisores de");
        btnDivisores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frMultiploLayout = new javax.swing.GroupLayout(frMultiplo.getContentPane());
        frMultiplo.getContentPane().setLayout(frMultiploLayout);
        frMultiploLayout.setHorizontalGroup(
            frMultiploLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frMultiploLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(frMultiploLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDivisores)
                    .addComponent(btnMenoresA)
                    .addGroup(frMultiploLayout.createSequentialGroup()
                        .addGroup(frMultiploLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Multiplo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMayoresA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(frMultiploLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMultiplo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        frMultiploLayout.setVerticalGroup(
            frMultiploLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frMultiploLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frMultiploLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frMultiploLayout.createSequentialGroup()
                        .addComponent(Multiplo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMayoresA))
                    .addGroup(frMultiploLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMultiplo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMenoresA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDivisores)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bOperar.setText("Opciones");
        bOperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOperarActionPerformed(evt);
            }
        });

        PanelY.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout PanelYLayout = new javax.swing.GroupLayout(PanelY);
        PanelY.setLayout(PanelYLayout);
        PanelYLayout.setHorizontalGroup(
            PanelYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
        );
        PanelYLayout.setVerticalGroup(
            PanelYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        panelTabla.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelTablaLayout = new javax.swing.GroupLayout(panelTabla);
        panelTabla.setLayout(panelTablaLayout);
        panelTablaLayout.setHorizontalGroup(
            panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelTablaLayout.setVerticalGroup(
            panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        PanelX.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout PanelXLayout = new javax.swing.GroupLayout(PanelX);
        PanelX.setLayout(PanelXLayout);
        PanelXLayout.setHorizontalGroup(
            PanelXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 837, Short.MAX_VALUE)
        );
        PanelXLayout.setVerticalGroup(
            PanelXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(391, 391, 391)
                .addComponent(bOperar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(bOperar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bOperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOperarActionPerformed
        // TODO add your handling code here:
        
             
            flgT= false;
            btnTraspuesta.setText("Traspuesta");
            flgC= true;
            frOperaciones.setVisible(true);
            frOperaciones.setBounds(0, 0, this.getWidth(), 270);
            frOperaciones.setLocationRelativeTo(null);
        
//        String[] x = tX.getText().split(",");
//        String[] y = tY.getText().split(",");
//        String[] coor = tResult.getText().split(",");
//        if (cOperaciones.getSelectedIndex() == 0) {
//            System.out.println(matrizOriginal.length());
//            System.out.println(((ListaSecuencial)matrizOriginal.get(0)).length());
//            
//            int op1 = Integer.parseInt(((JTextField)((ListaSecuencial)matrizOriginal.get(Integer.parseInt(y[0]))).get(Integer.parseInt(x[0]))).getText());
//            int op2 = Integer.parseInt(((JTextField)((ListaSecuencial)matrizOriginal.get(Integer.parseInt(y[1]))).get(Integer.parseInt(x[1]))).getText());
//            tMensaje.setText("La suma de "+op1+" y "+op2+" es: "+(op1+op2));
//            ListaSecuencial columna=(ListaSecuencial)matrizOriginal.get(3);
//            Object fila=columna.get(3);
//        }
//        else if (cOperaciones.getSelectedIndex() == 1) {
//            
//        }
//        else if (cOperaciones.getSelectedIndex() == 2) {
//            
//        }
//        else if (cOperaciones.getSelectedIndex() == 3) {
//            
//        }
    }//GEN-LAST:event_bOperarActionPerformed

public void transponerMatriz(){
    //
}
private void pintarMatriz(Matriz m){
             
            panelTabla.removeAll();
            panelTabla.repaint();
            panelTabla.revalidate();
            int row = m.sizeRow();
            int column = m.sizeColumn();
            panelTabla.setLayout(new GridLayout(0, (int)column));
            
            
            for (int j = 0; j < row; j++) {
                for (int k = 0; k < column; k++) {
                    
                    String obj = (String) m.get(j, k);
                    JTextField cell = new JTextField(obj);
                    panelTabla.add(cell);
                    //System.err.print(obj.getText()+"  ");
                }
                System.err.println("");
            }
            //System.err.println(aux.sizeRow()+" "+aux.sizeColumn());
            //panelTabla.add(p);
        
}
public void nuevaMatriz(){
    int row = matrizOriginal.sizeRow();
    int column = matrizOriginal.sizeColumn();
    matrizOperaciones = null;
    matrizOperaciones = new Matriz(row,column);
    
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < column; j++) {
            JTextField lbl = (JTextField)matrizOriginal.get(i,j);
            String valor = lbl.getText();
            matrizOperaciones.set(i, j, valor);
            }
    }
}
    private void btnSumaSMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumaSMActionPerformed
        frSuma.setVisible(true);
        frSuma.setBounds(0, 0, 600, 390);
        frSuma.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_btnSumaSMActionPerformed

    private void btnSuma1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuma1ActionPerformed
        
        try {
            
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                        if(x>=x1 && x<=x2 && y>=y1 && y<=y2 )
                        {
                        JOptionPane.showMessageDialog(rootPane, "Seleccione otro output.");
                        return;
                        }
                    
                    }
            }
            
            int c=0,index = 0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(i==x && j==y){index = c;}
                    c++;
                    }
            }
            
            
            Matriz sm = matrizOperaciones.getSelectedMatrix(x1, y1, x2, y2);
            int suma = 0;
            int cnt = 0 ; 
            limpiarTF();
            for (int i = 0; i < sm.sizeRow(); i++) 
            {
                for (int j = 0; j < sm.sizeColumn(); j++) 
                {
                    suma+=Integer.parseInt((String)sm.get(i, j));
                }
            }
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if( i>=x1 && j >= y1 && i<=x2 && j<=y2 ){
                            JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                            lbl.setBackground(Color.red);
                        }
                        cnt++;
                    }
            }
            
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(suma+"");
            
            
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnSuma1ActionPerformed

    private void btnSuma2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuma2ActionPerformed
       
        try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            if( (x==x1 & y==y1) || (x==x2 && y==y2) ){
            JOptionPane.showMessageDialog(rootPane, "Seleccione un output distinto.");
                return;
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
           
            limpiarTF();
            int suma = 0,cnt = 0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(x1==i && y1 ==j){
                        suma+=Integer.parseInt((String)matrizOperaciones.get(i, j));
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}
                    if(x2==i && y2==j){
                        suma+=Integer.parseInt((String)matrizOperaciones.get(i, j));  
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}  
                     cnt++;
                }
               
            }
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(suma+"");
            
           
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnSuma2ActionPerformed

    private void btnSuma3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuma3ActionPerformed
        
        try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                        if(x>=x1 && x<=x2 && y>=y1 && y<=y2 )
                        {
                        JOptionPane.showMessageDialog(rootPane, "Seleccione otro output.");
                        return;
                        }
                    
                    }
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
            
            Matriz sm = matrizOperaciones.getSelectedMatrix(x1, y1, x2, y2);
            double suma = 0;int cnt = 0;
            for (int i = 0; i < sm.sizeRow(); i++) {
                for (int j = 0; j < sm.sizeColumn(); j++) {
                    if(sm.get(i, j)!=null){
                        suma+=Integer.parseInt((String)sm.get(i, j));
                                                
                       
                    }
                     
                }
            }
            limpiarTF();
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if( i>=x1 && j >= y1 && i<=x2 && j<=y2 ){
                            JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                            lbl.setBackground(Color.red);
                           
                    }
                    cnt++;
                    }
            }
            
            int promedio  = (int)suma/sm.cantidadElementos() ;
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(promedio+"");
            
            
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnSuma3ActionPerformed
boolean flgT=true;
    private void btnTraspuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraspuestaActionPerformed
        
        matrizTraspuesta = new Matriz(matrizOperaciones.sizeColumn(),matrizOperaciones.sizeRow());
         
        for (int x=0; x < matrizOperaciones.sizeRow(); x++) {
            for (int y=0; y < matrizOperaciones.sizeColumn(); y++) {
                matrizTraspuesta.set(y, x,matrizOperaciones.get(x,y));
                }
            }        
        pintarMatriz(matrizTraspuesta);
        matrizOperaciones = null;
        matrizOperaciones = new Matriz(matrizTraspuesta.sizeRow(),matrizTraspuesta.sizeColumn());
        for (int x=0; x < matrizTraspuesta.sizeRow(); x++) {
            for (int y=0; y < matrizTraspuesta.sizeColumn(); y++) {
                matrizOperaciones.set(x, y,matrizTraspuesta.get(x,y));
                }
         
        }
    }//GEN-LAST:event_btnTraspuestaActionPerformed

    private void btnMultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplicacionActionPerformed
       
        multiplicacion();
           
    }//GEN-LAST:event_btnMultiplicacionActionPerformed

    private void btnDivisioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisioActionPerformed
    division();       
    }//GEN-LAST:event_btnDivisioActionPerformed
private boolean flgE = true;
    private void btnEspejoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEspejoActionPerformed
        
        matrizEspejo = new Matriz(matrizOperaciones.sizeRow(),matrizOperaciones.sizeColumn());
        // matrizOriginal = new Matriz(matrizOperaciones.sizeRow(),matrizOperaciones.sizeColumn());
         int a = matrizOperaciones.sizeRow()-1,b = matrizOperaciones.sizeColumn()-1;
        for (int x=0; x < matrizOperaciones.sizeRow(); x++) {
                for (int y=0; y < matrizOperaciones.sizeColumn(); y++) {
                if(matrizOperaciones.get(x,y)==null) matrizEspejo.set(a, b,null);
                matrizEspejo.set(a, b,matrizOperaciones.get(x,y));
                //matrizOriginal.set(x, y,matrizOperaciones.get(x,y));
                
                //System.out.println(" b "+b);
                b--;
                if(b==-1)b=matrizOperaciones.sizeColumn()-1;
                
                }
                 //System.out.println(" a "+a);
            a--;
           
         }        
        //System.out.println("");
        pintarMatriz(matrizEspejo);
        for (int x=0; x < matrizEspejo.sizeRow(); x++) {
            for (int y=0; y < matrizEspejo.sizeColumn(); y++) {
                matrizOperaciones.set(x, y,matrizEspejo.get(x,y));
                //System.out.println(" "+matrizEspejo.get(x, y));
            }
         }
    }//GEN-LAST:event_btnEspejoActionPerformed

    private void btnDiagonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagonalActionPerformed
        double l = matrizOperaciones.sizeColumn();
        if((double)panelTabla.getComponentCount()/l <= (l-1))
            JOptionPane.showMessageDialog(rootPane, "La matriz no tiene diagonales de esquina a esquina.");
        else cambiarDiagonales();
        
    }//GEN-LAST:event_btnDiagonalActionPerformed
    private void cambiarDiagonales()
    {
        matrizDiagonal = new Matriz(matrizOperaciones.sizeRow(),matrizOperaciones.sizeColumn());
        int a = 0,b = matrizOperaciones.sizeColumn()-1;
        
        for (int x=0; x < matrizOperaciones.sizeRow(); x++) {
            for (int y=0; y < matrizOperaciones.sizeColumn(); y++) {
                matrizDiagonal.set(x, y,matrizOperaciones.get(x,y));    
                   
                }
            } 
        
        for (int x=0; x < matrizOperaciones.sizeRow(); x++) {
            for (int y=0; y < matrizOperaciones.sizeColumn(); y++) {
                    if(x==y){
                    matrizDiagonal.set(x, y,matrizOperaciones.get(a,b));
                    matrizDiagonal.set(a, b,matrizOperaciones.get(x,y));
                    b--;
                    a++;
                    }
                }
            }        
        pintarMatriz(matrizDiagonal);
        matrizOperaciones = null;
        matrizOperaciones = new Matriz(matrizDiagonal.sizeRow(),matrizDiagonal.sizeColumn());
        for (int x=0; x < matrizDiagonal.sizeRow(); x++) {
            for (int y=0; y < matrizDiagonal.sizeColumn(); y++) {
                matrizOperaciones.set(x, y,matrizDiagonal.get(x,y));
                }
         
        }
    }
    private void btnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarActionPerformed
       flgC=true;
        nuevaMatriz();
     pintarMatriz(matrizOperaciones);
    }//GEN-LAST:event_btnRestaurarActionPerformed

    private void btnMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimoActionPerformed
        limpiarTF();
        int min = (int)Double.POSITIVE_INFINITY;
        int indice = 0;
        JTextField[] lbl = new JTextField[panelTabla.getComponentCount()];
        for (int i = 0; i < panelTabla.getComponentCount(); i++) {
            lbl[i] = (JTextField)panelTabla.getComponent(i);
            try{
            int numero = Integer.parseInt(lbl[i].getText());
            if(numero<min){
                min = numero;
                indice = i;
                
            }
            }catch(Exception e){}
        }
        lbl[indice].setOpaque(true);
        lbl[indice].setBackground(Color.CYAN);
    }//GEN-LAST:event_btnMinimoActionPerformed
    
    private void btnLimpiarLblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarLblActionPerformed
        limpiarTF();
    }//GEN-LAST:event_btnLimpiarLblActionPerformed
 
    private void btnCuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuadradoActionPerformed
    if(flgC){
    matrizCuadrado = new Matriz(matrizOperaciones.sizeRow(),matrizOperaciones.sizeColumn());
    int numero=0;
        for (int x=0; x < matrizOperaciones.sizeRow(); x++) {
            for (int y=0; y < matrizOperaciones.sizeColumn(); y++) {
                if(matrizOperaciones.get(x,y)==null)
                    matrizCuadrado.set(x, y,matrizOperaciones.get(x,y));
                else 
                {
                    numero=Integer.parseInt((String)matrizOperaciones.get(x,y));
                    numero = (int)Math.pow(numero, 2);
                    matrizCuadrado.set(x, y,String.valueOf(numero));
                }
                
                }
            }    
       
        pintarMatriz(matrizCuadrado);
        matrizOperaciones = null;
        matrizOperaciones = new Matriz(matrizCuadrado.sizeRow(),matrizCuadrado.sizeColumn());
        for (int x=0; x < matrizCuadrado.sizeRow(); x++) {
            for (int y=0; y < matrizCuadrado.sizeColumn(); y++) {
                matrizOperaciones.set(x, y,matrizCuadrado.get(x,y));
                }
         
        }    
        flgC=false;
    }
    }//GEN-LAST:event_btnCuadradoActionPerformed

    private void btnMaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaximoActionPerformed
        limpiarTF();
        int max = (int)Double.NEGATIVE_INFINITY;
        int indice = 0;
        JTextField[] lbl = new JTextField[panelTabla.getComponentCount()];
        for (int i = 0; i < panelTabla.getComponentCount(); i++) {
            lbl[i] = (JTextField)panelTabla.getComponent(i);
            try{
            int numero = Integer.parseInt(lbl[i].getText());
            if(numero>max){
                max = numero;
                indice = i;
                
            }
            }catch(Exception e){}
            
        }
        lbl[indice].setOpaque(true);
        lbl[indice].setBackground(Color.CYAN);
    }//GEN-LAST:event_btnMaximoActionPerformed

    private void btnParImparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParImparActionPerformed
       limpiarTF();
        
       
        
        for (int i = 0; i < panelTabla.getComponentCount(); i++) {
            JTextField lbl = (JTextField)panelTabla.getComponent(i);
            try{
            int numero = Integer.parseInt(lbl.getText());
            
            if(numero%2==0){
                lbl.setBackground(Color.LIGHT_GRAY);
            }
            else{
                lbl.setBackground(Color.DARK_GRAY);
            }
            }catch(Exception e){}
        }
        
       
    }//GEN-LAST:event_btnParImparActionPerformed

    private void btnPrimosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimosActionPerformed
        limpiarTF();
        for (int i = 0; i < panelTabla.getComponentCount(); i++) {
            JTextField lbl = (JTextField)panelTabla.getComponent(i);
            
            try{
            int numero = Integer.parseInt(lbl.getText());
            if(pasa(numero))
            if(esPrimo(numero)){
                System.out.println(" "+numero);
                lbl.setBackground(Color.MAGENTA);
            }
            
            }catch(Exception e){
                System.out.println("lbl vacio");
            }
        }
    }//GEN-LAST:event_btnPrimosActionPerformed

    private void btnPerfectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerfectoActionPerformed
        limpiarTF();
       for (int i = 0; i < panelTabla.getComponentCount(); i++) {
            JTextField lbl = (JTextField)panelTabla.getComponent(i);
            try{
            int numero = Integer.parseInt(lbl.getText());
            double r = Math.sqrt((double)numero);
            if(r%1==0){
                lbl.setBackground(Color.ORANGE);
            }
            
            }catch(Exception e){}
        }        
    }//GEN-LAST:event_btnPerfectoActionPerformed

    private void MultiploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiploActionPerformed
        
        try{
            int multiplo = Integer.parseInt(txtMultiplo.getText());
            limpiarTF();
            for (int i = 0; i < panelTabla.getComponentCount(); i++) {
                JTextField lbl = (JTextField)panelTabla.getComponent(i);
            
                try{
                int numero = Integer.parseInt(lbl.getText());
            
                if(numero%multiplo==0 || numero == 0){
                System.out.println(" "+numero);
                lbl.setBackground(Color.orange);
                }
            
                }catch(Exception e){
                System.out.println("lbl vacio");
                }
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Debe ser un valor entero el multiplo.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_MultiploActionPerformed

    private void btnMultiploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiploActionPerformed
         frMultiplo.setBounds(n, n, 350, 180);
         frMultiplo.setLocationRelativeTo(null);
         frMultiplo.setVisible(true);
    }//GEN-LAST:event_btnMultiploActionPerformed

    private void btnRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaActionPerformed
        try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            if( (x==x1 & y==y1) || (x==x2 && y==y2) ){
            JOptionPane.showMessageDialog(rootPane, "Seleccione un output distinto.");
                return;
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
           
            limpiarTF();
            int resta = 0,cnt = 0,nr1=0,nr2=0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(x1==i && y1 ==j){
                        nr1=Integer.parseInt((String)matrizOperaciones.get(i, j));
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}
                    if(x2==i && y2==j){
                        nr2=Integer.parseInt((String)matrizOperaciones.get(i, j));  
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}  
                     cnt++;
                }
               
            }
            
            resta = nr1 - nr2;
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(resta+"");
            
           
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnRestaActionPerformed

    private void btnRestaProgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaProgActionPerformed
       try {
            
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                        if(x>=x1 && x<=x2 && y>=y1 && y<=y2 )
                        {
                        JOptionPane.showMessageDialog(rootPane, "Seleccione otro output.");
                        return;
                        }
                    
                    }
            }
            
            int c=0,index = 0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(i==x && j==y){index = c;}
                    c++;
                    }
            }
            
            
            Matriz sm = matrizOperaciones.getSelectedMatrix(x1, y1, x2, y2);
            int suma = 0;
            int cnt = 0 ; 
            limpiarTF();
            for (int i = 0; i < sm.sizeRow(); i++) 
            {
                for (int j = 0; j < sm.sizeColumn(); j++) 
                {
                    suma-=Integer.parseInt((String)sm.get(i, j));
                }
            }
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if( i>=x1 && j >= y1 && i<=x2 && j<=y2 ){
                            JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                            lbl.setBackground(Color.red);
                        }
                        cnt++;
                    }
            }
            
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(suma+"");
            
            
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnRestaProgActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpiarTF();
        
       
        
        for (int i = 0; i < panelTabla.getComponentCount(); i++) {
            JTextField lbl = (JTextField)panelTabla.getComponent(i);
            try{
            int numero = Integer.parseInt(lbl.getText());
            
            if(numero>=0){
                lbl.setBackground(Color.LIGHT_GRAY);
            }
            else{
                lbl.setBackground(Color.DARK_GRAY);
            }
            }catch(Exception e){}
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnMayoresAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMayoresAActionPerformed
         try{
            int x = Integer.parseInt(txtMultiplo.getText());
            limpiarTF();
            for (int i = 0; i < panelTabla.getComponentCount(); i++) {
                JTextField lbl = (JTextField)panelTabla.getComponent(i);
            
                try{
                int numero = Integer.parseInt(lbl.getText());
            
                if(numero>x){
                
                lbl.setBackground(Color.orange);
                }
            
                }catch(Exception e){
                System.out.println("lbl vacio");
                }
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Debe ser un valor entero el multiplo.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnMayoresAActionPerformed

    private void btnMenoresAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenoresAActionPerformed
       try{
            int x = Integer.parseInt(txtMultiplo.getText());
            limpiarTF();
            
            for (int i = 0; i < panelTabla.getComponentCount(); i++) {
                JTextField lbl = (JTextField)panelTabla.getComponent(i);
            
                try{
                int numero = Integer.parseInt(lbl.getText());
            
                if(numero<x){
                
                lbl.setBackground(Color.orange);
                }
            
                }catch(Exception e){
                System.out.println("lbl vacio");
                }
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Debe ser un valor entero el multiplo.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnMenoresAActionPerformed

    private void btnDivisoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisoresActionPerformed
       try{
            int x = Integer.parseInt(txtMultiplo.getText());
            limpiarTF();
            LinkedList lista = new LinkedList();
            for (int i = 1; i <= x; i++) {
               if( x%i==0 )lista.add(i);
            }
            
            for (int i = 0; i < panelTabla.getComponentCount(); i++) {
                JTextField lbl = (JTextField)panelTabla.getComponent(i);
            
                try{
                int numero = Integer.parseInt(lbl.getText());
            
                
                    for (int j = 0; j < lista.size(); j++) {
                        if(numero==(int)lista.get(j)||numero == 1 || numero == x)
                        {lbl.setBackground(Color.orange);
                        break;}
                    }
                
                
            
                }catch(Exception e){
                System.out.println("lbl vacio");
                }
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Debe ser un valor entero el multiplo.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnDivisoresActionPerformed

    private void btnConcatenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcatenarActionPerformed
       try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            if( (x==x1 & y==y1) || (x==x2 && y==y2) ){
            JOptionPane.showMessageDialog(rootPane, "Seleccione un output distinto.");
                return;
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
           
            limpiarTF();
            int cnt = 0;
            String nr1="",nr2="",concatenado="";
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(x1==i && y1 ==j){
                        nr1=(String)matrizOperaciones.get(i, j);
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}
                    if(x2==i && y2==j){
                        nr2=(String)matrizOperaciones.get(i, j);  
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}  
                     cnt++;
                }
               
            }
            if(Integer.parseInt(nr1)<0)nr1=nr1.replace("-", "");
            if(Integer.parseInt(nr2)<0)nr2=nr2.replace("-", "");   
            concatenado = nr1 + nr2;
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(concatenado+"");
            
           
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
       
    }//GEN-LAST:event_btnConcatenarActionPerformed

    private void btnMCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMCMActionPerformed
         try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            if( (x==x1 & y==y1) || (x==x2 && y==y2) ){
            JOptionPane.showMessageDialog(rootPane, "Seleccione un output distinto.");
                return;
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
           
            limpiarTF();
            int mcm = 0,cnt = 0,nr1=0,nr2=0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(x1==i && y1 ==j){
                        nr1=Integer.parseInt((String)matrizOperaciones.get(i, j));
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}
                    if(x2==i && y2==j){
                        nr2=Integer.parseInt((String)matrizOperaciones.get(i, j));  
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}  
                     cnt++;
                }
               
            }
            
            mcm = mcm(nr1,nr2);
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(mcm+"");
            
           
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnMCMActionPerformed

    private void btnMCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMCDActionPerformed
         try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            if( (x==x1 & y==y1) || (x==x2 && y==y2) ){
            JOptionPane.showMessageDialog(rootPane, "Seleccione un output distinto.");
                return;
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
           
            limpiarTF();
            int mcd = 0,cnt = 0,nr1=0,nr2=0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(x1==i && y1 ==j){
                        nr1=Integer.parseInt((String)matrizOperaciones.get(i, j));
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}
                    if(x2==i && y2==j){
                        nr2=Integer.parseInt((String)matrizOperaciones.get(i, j));  
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.red);}  
                     cnt++;
                }
               
            }
            
            mcd = mcd(nr1,nr2);
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.red);
            obj.setText(mcd+"");
            
           
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnMCDActionPerformed
    public  int mcd(int n1,int n2){
        int mcd =0;
        int a = Math.max(n1, n2);
        int b = Math.min(n1, n2);
        do{
            mcd=b;
            b = a%b;
            a = mcd;
        }while(b!=0);
        return mcd;
    }
    public  int mcm(int n1,int n2){
        int mcm =0;
        int a = Math.max(n1, n2);
        int b = Math.min(n1, n2);
        mcm = (a/mcd(a,b))*b;
        return mcm;
    }
     public static boolean pasa(int numero){
        int contador = numero/2;
        boolean primo=true;
        while ((primo) && (contador!=numero)){
            if (numero % contador == 0)
                 primo = false;
                 contador++;
            }
        return primo;
}
    public static boolean esPrimo(int numero){
        int contador = 2;
        boolean primo=true;
        while ((primo) && (contador!=numero)){
            if (numero % contador == 0)
                 primo = false;
                 contador++;
            }
        return primo;
}
    private final void multiplicacion(){
        try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            if( (x==x1 & y==y1) || (x==x2 && y==y2) ){
            JOptionPane.showMessageDialog(rootPane, "Seleccione un output distinto.");
                return;
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
            
            limpiarTF();
            int mult = 1,cnt = 0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(x1==i && y1 ==j){
                        mult*=Integer.parseInt((String)matrizOperaciones.get(i, j));
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.pink);}
                    if(x2==i && y2==j){
                        mult*=Integer.parseInt((String)matrizOperaciones.get(i, j));  
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.pink);}  
                     cnt++;
                }
               
            }
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.pink);
            obj.setText(mult+"");
            
            x1Input.setText("");
            y1Input.setText("");
            x2Input.setText("");
            y2Input.setText("");
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
   
    private final void division(){
        try {
            int x = Integer.parseInt(xOutput.getText());
            int y = Integer.parseInt(yOutput.getText());
            int x1 = Integer.parseInt(x1Input.getText());
            int y1 = Integer.parseInt(y1Input.getText());
            int x2 = Integer.parseInt(x2Input.getText());
            int y2 = Integer.parseInt(y2Input.getText());
            if( (x==x1 & y==y1) || (x==x2 && y==y2) ){
            JOptionPane.showMessageDialog(rootPane, "Seleccione un output distinto.");
                return;
            }
            panelTabla.getComponentCount();
            int c=0,index = 0;
            for (int i = 0; i < matrizOriginal.sizeRow(); i++) {
            for (int j = 0; j < matrizOriginal.sizeColumn(); j++) {
                if(i==x && j==y){index = c;}
                c++;
                }
            }
            
            
            limpiarTF();
            int div1 = 0,div2=0,cnt = 0;
            for (int i = 0; i < matrizOperaciones.sizeRow(); i++) {
                for (int j = 0; j < matrizOperaciones.sizeColumn(); j++) {
                    if(x1==i && y1 ==j){
                        div1=Integer.parseInt((String)matrizOperaciones.get(i, j));
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.green);}
                    if(x2==i && y2==j){
                        div2=Integer.parseInt((String)matrizOperaciones.get(i, j));  
                    JTextField lbl = (JTextField)panelTabla.getComponent(cnt);
                        lbl.setBackground(Color.green);}  
                     cnt++;
                }
               
            }
            JTextField obj = (JTextField) panelTabla.getComponent(index);
            obj.setBackground(Color.green);
            obj.setText(div1/div2+"");
            
            x1Input.setText("");
            y1Input.setText("");
            x2Input.setText("");
            y2Input.setText("");
            x1Input.requestFocus();
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Uno de los indices debe ser un valor entero.");
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    
    private final void limpiarTF(){
     
        for (int i = 0; i < panelTabla.getComponentCount(); i++) {
         JTextField lbl = (JTextField)panelTabla.getComponent(i);
         lbl.setBackground(Color.white);
     }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tabla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Multiplo;
    private javax.swing.JPanel PanelX;
    private javax.swing.JPanel PanelY;
    private javax.swing.JButton bOperar;
    private javax.swing.JButton btnConcatenar;
    private javax.swing.JButton btnCuadrado;
    private javax.swing.JButton btnDiagonal;
    private javax.swing.JButton btnDivisio;
    private javax.swing.JButton btnDivisores;
    private javax.swing.JButton btnEspejo;
    private javax.swing.JButton btnLimpiarLbl;
    private javax.swing.JButton btnMCD;
    private javax.swing.JButton btnMCM;
    private javax.swing.JButton btnMaximo;
    private javax.swing.JButton btnMayoresA;
    private javax.swing.JButton btnMenoresA;
    private javax.swing.JButton btnMinimo;
    private javax.swing.JButton btnMultiplicacion;
    private javax.swing.JButton btnMultiplo;
    private javax.swing.JButton btnParImpar;
    private javax.swing.JButton btnPerfecto;
    private javax.swing.JButton btnPrimos;
    private javax.swing.JButton btnResta;
    private javax.swing.JButton btnRestaProg;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JButton btnSuma1;
    private javax.swing.JButton btnSuma2;
    private javax.swing.JButton btnSuma3;
    private javax.swing.JButton btnSumaSM;
    private javax.swing.JButton btnTraspuesta;
    private javax.swing.JFrame frMultiplo;
    private javax.swing.JFrame frOperaciones;
    private javax.swing.JFrame frSuma;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelTabla;
    private javax.swing.JTextField txtMultiplo;
    private javax.swing.JTextField x1Input;
    private javax.swing.JTextField x2Input;
    private javax.swing.JTextField xOutput;
    private javax.swing.JTextField y1Input;
    private javax.swing.JTextField y2Input;
    private javax.swing.JTextField yOutput;
    // End of variables declaration//GEN-END:variables
}
